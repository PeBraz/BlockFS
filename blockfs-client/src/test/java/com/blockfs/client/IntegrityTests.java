package com.blockfs.client;


import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;



public class IntegrityTests
    extends TestCase
{

    private final String BLOCK_DIR = "data";

    private final IBlockClient client = new BlockClient();


    /**
     * Create the test case
     *
     * @param testName name of the test case
     */
    public IntegrityTests(String testName )
    {
        super( testName );
    }

    /**
     * @return the suite of tests being tested
     */
    public static Test suite()
    {
        return new TestSuite(IntegrityTests.class);

    }

    @Override
    public void setUp() {
        File path = new File(BLOCK_DIR);
        if (path.exists())
            for (File f : path.listFiles())
                f.delete();
        else
            path.mkdir();
    }

    @Override
    public void tearDown() {
        File path = new File(BLOCK_DIR);
        for (File f : path.listFiles())
            f.delete();
    }

    /**
     *  Tests that a wrong hash generated by the server is not accepted
     */
    public void testWriteDataBlockInvalid() {}
    /**
     *  Tests that the contents received were changed, when server sends contents back to client
     */
    public void testReadDataBlockInvalid() {}

    /**
     * Tests that the signature was incorrect and server doesn't accept content
     */
    public void testReadPKBInvalidSignatureAtServer() {}

    /**
     * Tests that file signature returned to the client is incorrect
     */
    public void testReadPKBInvalidSignatureAtClient() {}


}
